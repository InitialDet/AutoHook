<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DrawHeader_Testing" xml:space="preserve">
    <value>Testing</value>
  </data>
  <data name="default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DrawImportExport_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ImportStackFromClipboard" xml:space="preserve">
    <value>Import stack from clipboard.</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="PresetName" xml:space="preserve">
    <value>Preset Name</value>
  </data>
  <data name="ImportThisPreset" xml:space="preserve">
    <value>Import this preset?</value>
  </data>
  <data name="AutoMooch" xml:space="preserve">
    <value>Auto Mooch</value>
  </data>
  <data name="AddLastCatch" xml:space="preserve">
    <value>Add Last Catch:</value>
  </data>
  <data name="ExportPresetToClipboard" xml:space="preserve">
    <value>Export preset to clipboard.</value>
  </data>
  <data name="PresetExportedToTheClipboard" xml:space="preserve">
    <value>Preset exported to the clipboard</value>
  </data>
  <data name="APresetWithTheSameNameAlreadyExists" xml:space="preserve">
    <value>A preset with the same name already exists</value>
  </data>
  <data name="PresetAlreadyExist" xml:space="preserve">
    <value>A preset with the same name already exists</value>
  </data>
  <data name="CurrentBaitMooch" xml:space="preserve">
    <value>Current bait/mooch:</value>
  </data>
  <data name="AddCurrentBaitMooch" xml:space="preserve">
    <value>Add Current Bait/Mooch</value>
  </data>
  <data name="TabPresets_DrawHeader_IsEnabledByDefault" xml:space="preserve">
    <value>is enabled by default when new bait/mooch is added </value>
  </data>
  <data name="TabPresets_DrawHeader_CorrectlyEditTheBaitMoochName" xml:space="preserve">
    <value>Make sure to correctly edit the bait/mooch name like displayed in-game (Ex: Versatile Lure)</value>
  </data>
  <data name="NewBaitMooch" xml:space="preserve">
    <value>New bait/mooch</value>
  </data>
  <data name="EditMe" xml:space="preserve">
    <value>EditMe</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="HoldShiftToDelete" xml:space="preserve">
    <value>Hold SHIFT to delete.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="RightClickToRename" xml:space="preserve">
    <value>Right-click to rename</value>
  </data>
  <data name="TabPresets_DrawHeader_EditPresetNamePressEnterToConfirm" xml:space="preserve">
    <value>Edit Preset name (press Enter to confirm)</value>
  </data>
  <data name="HookPresets" xml:space="preserve">
    <value>Hook Presets</value>
  </data>
  <data name="AddNewPreset" xml:space="preserve">
    <value>Add New Preset</value>
  </data>
  <data name="TabPresets_DrawHeader_TabDescription" xml:space="preserve">
    <value>Here you can customize which hook to use based on the current bait or mooch.
If a bait/mooch is not specified, the default behavior (General Tab) will be used instead.</value>
  </data>
  <data name="NewPreset" xml:space="preserve">
    <value>New Preset</value>
  </data>
  <data name="TabNameCustomPresets" xml:space="preserve">
    <value>Custom Presets</value>
  </data>
  <data name="TabNameGPConfig" xml:space="preserve">
    <value>GP Config</value>
  </data>
  <data name="TabGPConfig_TabDescription" xml:space="preserve">
    <value>Here you can customize the GP Threshold for the actions and items used by the AutoCast feature.</value>
  </data>
  <data name="GP" xml:space="preserve">
    <value>GP</value>
  </data>
  <data name="Above" xml:space="preserve">
    <value>Above</value>
  </data>
  <data name="Below" xml:space="preserve">
    <value>Below</value>
  </data>
  <data name="WillBeUsedWhenYourGPIsEqualOr" xml:space="preserve">
    <value>will be used when your GP is Equal or</value>
    <comment>Action will be used when your GP is Equal or Above/Below</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="TabnameGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="DrawHeader_GeneralSettings" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="DrawHeader_CheckChangelog" xml:space="preserve">
    <value>Check the new changes in the Changelog below</value>
  </data>
  <data name="DrawHeader_ClickToReportAnIssue" xml:space="preserve">
    <value>Click here to report an issue or make a suggestion</value>
  </data>
  <data name="UseDefaultCast" xml:space="preserve">
    <value>Use Default Cast</value>
  </data>
  <data name="UseDefaultMooch" xml:space="preserve">
    <value>Use Default Mooch</value>
  </data>
  <data name="DefaultHookingBehavior" xml:space="preserve">
    <value>This is the default hooking behavior if no Custom Preset is found.</value>
  </data>
  <data name="DefaultMoochingBehavior" xml:space="preserve">
    <value>This is the default mooching behavior if no Preset is found.</value>
  </data>
  <data name="Changelog" xml:space="preserve">
    <value>Changelog</value>
  </data>
  <data name="DefaultCast" xml:space="preserve">
    <value>Default Cast</value>
  </data>
  <data name="DefaultMooch" xml:space="preserve">
    <value>Default Mooch</value>
  </data>
  <data name="HookWeakExclamation" xml:space="preserve">
    <value>Hook Weak (!)</value>
  </data>
  <data name="HookStrongExclamation" xml:space="preserve">
    <value>Hook Strong (!!)</value>
  </data>
  <data name="HookLegendaryExclamation" xml:space="preserve">
    <value>Hook Legendary (!!!)</value>
  </data>
  <data name="HookWillBeUsedIfPatienceIsNotUp" xml:space="preserve">
    <value>"Hook" will be used if Patience is not up</value>
  </data>
  <data name="PrecisionHookset" xml:space="preserve">
    <value>Precision Hookset</value>
  </data>
  <data name="PowerfulHookset" xml:space="preserve">
    <value>Powerful Hookset</value>
  </data>
  <data name="MoochBaitName" xml:space="preserve">
    <value>Mooch/Bait Name</value>
  </data>
  <data name="BaitAlreadyExists" xml:space="preserve">
    <value>Bait already exists</value>
  </data>
  <data name="MaxWait" xml:space="preserve">
    <value>Max. Wait</value>
    <comment>Maximum time to wait</comment>
  </data>
  <data name="HelpMarkerMaxWaitTimer" xml:space="preserve">
    <value>Hook will be used after the defined amount of time has passed
Min. time: 2s (because of animation lock)

Set Zero (0) to disable, and dont make this lower than the Min. Wait</value>
  </data>
  <data name="MinWait" xml:space="preserve">
    <value>Min. Wait</value>
  </data>
  <data name="HelpMarkerMinWaitTimer" xml:space="preserve">
    <value>Hook will NOT be used until the minimum time has passed.

Ex: If you set the number as 14 and something bites after 8 seconds, the fish will not to be hooked

Set Zero (0) to disable</value>
  </data>
  <data name="StopFishingAfter" xml:space="preserve">
    <value>Stop fishing after...</value>
  </data>
  <data name="StopFishing" xml:space="preserve">
    <value>Stop fishing</value>
  </data>
  <data name="AfterBeingCaught" xml:space="preserve">
    <value>After being caught...</value>
  </data>
  <data name="AfterBeingCaughtDescription" xml:space="preserve">
    <value>- If this config is a bait: Stops fishing after X amount of fish is caught
- If this config is a fish: Stops fishing after it being caught X amount of times</value>
  </data>
  <data name="AfterAnglersArt" xml:space="preserve">
    <value>After X stacks of Anglers Art...</value>
  </data>
  <data name="AfterAnglersArtDescription" xml:space="preserve">
    <value>- If this config is a bait: Stops fishing after X stacks of Anglers Art
- If this config is a fish: Has no effect, only works on baits!</value>
  </data>
  <data name="TimeS" xml:space="preserve">
    <value>Time(s)</value>
    <comment>Quantity, example: 5 Time(s) </comment>
  </data>
  <data name="SurfaceSlapIdenticalCast" xml:space="preserve">
    <value>Surface Slap &amp; Identical Cast</value>
  </data>
  <data name="OverridesIdenticalCast" xml:space="preserve">
    <value>Overrides Identical Cast</value>
  </data>
  <data name="OverridesSurfaceSlap" xml:space="preserve">
    <value>Overrides Surface Slap</value>
  </data>
  <data name="UseSurfaceSlap" xml:space="preserve">
    <value>Use Surface Slap</value>
  </data>
  <data name="UseIdenticalCast" xml:space="preserve">
    <value>Use Identical Cast</value>
  </data>
  <data name="UseMoochII" xml:space="preserve">
    <value>Use Mooch II</value>
  </data>
  <data name="OnlyUseWhenFisherSIntutionIsActive" xml:space="preserve">
    <value>Only use when Fisher's Intuition is active</value>
  </data>
  <data name="AutoMoochPresetDescription" xml:space="preserve">
    <value>- If this is a Bait (Ex: Versatile Lure), all fish caught by this bait will be mooched
- If this is a Fish/Mooch (Ex: Harbor Herring), it'll be mooched when caught
- If this option is disabled, the fish will NOT be mooched even if Auto Mooch is also enabled in the general tab</value>
  </data>
  <data name="AutoMoochPresetHelpMarker" xml:space="preserve">
    <value>This option takes priority over the Auto Cast Line</value>
  </data>
  <data name="FisherSIntuitionSettings" xml:space="preserve">
    <value>Fisher's Intuition Settings</value>
  </data>
  <data name="FisherSIntuitionSettingsHelpMarker" xml:space="preserve">
    <value>Enable Custom Hooks when Fisher's Intuition is detected</value>
  </data>
  <data name="HoldShiftBothDHTH" xml:space="preserve">
    <value>Hold SHIFT to select both Double and Triple Hook (not recommended)</value>
  </data>
  <data name="UseDoubleHookIfGp400" xml:space="preserve">
    <value>Use Double Hook (If gp &gt; 400)</value>
  </data>
  <data name="UseTripleHookIfGp700" xml:space="preserve">
    <value>Use Triple Hook (If gp &gt; 700)</value>
  </data>
  <data name="UseWhenPatienceIsActiveNotRecommended" xml:space="preserve">
    <value>Use when Patience is active (not recommended)</value>
  </data>
  <data name="DHTHPatienceHelpMarker" xml:space="preserve">
    <value>Important!!!

If disabled, Precision/Powerful hook will be used instead when Patience is up.</value>
  </data>
  <data name="LetTheFishEscape" xml:space="preserve">
    <value>Let the fish escape if GP is below the required</value>
  </data>
  <data name="OnlyUseWhenIdenticalCastIsActive" xml:space="preserve">
    <value>Only use when Identical Cast is active</value>
  </data>
  <data name="DoubleTripleHookSettings" xml:space="preserve">
    <value>Double/Triple Hook Settings</value>
  </data>
  <data name="EnabledConfigArrow" xml:space="preserve">
    <value>Enabled Config -&gt;</value>
  </data>
  <data name="EnabledConfigArrowhelpMarker" xml:space="preserve">
    <value>Important!!!

If disabled, the fish will NOT be hooked or Mooched.
To use the default behavior (General Tab), please delete this configuration.</value>
  </data>
  <data name="ChumTimer" xml:space="preserve">
    <value>Chum Timer</value>
  </data>
  <data name="EnableChumTimers" xml:space="preserve">
    <value>Enable Chum Timers</value>
  </data>
  <data name="EnableChumTimersHelpMarker" xml:space="preserve">
    <value>Enable Min/Max times when under the effect of Chum</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="TabNameAutoGig" xml:space="preserve">
    <value>AutoGig</value>
  </data>
  <data name="TabAutoGigDescription" xml:space="preserve">
    <value>This is an experimental feature and it might miss the fish. If you find it missing too much, try adjusting the SpearFishing window scale to something different</value>
  </data>
  <data name="EnableAutoGig" xml:space="preserve">
    <value>Enable AutoGig</value>
  </data>
  <data name="HideOverlayDuringSpearfishing" xml:space="preserve">
    <value>Hide overlay during Spearfishing</value>
  </data>
  <data name="AutoGigHideOverlayHelpMarker" xml:space="preserve">
    <value>It'll only hide if the AutoGig option is disabled</value>
  </data>
  <data name="DrawFishHitbox" xml:space="preserve">
    <value>Draw fish hitbox</value>
  </data>
  <data name="DrawFishHitboxHelpMarker" xml:space="preserve">
    <value>The hitbox its only available for the fish of the Size and Speed selected</value>
  </data>
  <data name="DrawGigHitbox" xml:space="preserve">
    <value>Draw gig hitbox</value>
  </data>
  <data name="SelectTheSizeAndSpeed" xml:space="preserve">
    <value>Select the Size and Speed of the fish you want (Gatherbuddy's Spearfishing overlay helps a lot)</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="Speed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="AutoCastCordialPriority" xml:space="preserve">
    <value>Change Priority: Watered-Cordial &gt; Cordial &gt; HI-Cordials</value>
  </data>
  <data name="AutoCastCordialPriorityHelpMarker" xml:space="preserve">
    <value>If theres no Cordials, Hi-Cordials will be used instead</value>
  </data>
  <data name="AutoCastUseCordial" xml:space="preserve">
    <value>Use Cordials (Hi-Cordial First)</value>
  </data>
  <data name="AutoCastUseCordialHelpMarker" xml:space="preserve">
    <value>If theres no Hi-Cordials, Cordials will be used instead</value>
  </data>
  <data name="AutoCastUseFishEyes" xml:space="preserve">
    <value>Use Fish Eyes</value>
  </data>
  <data name="CancelsCurrentMooch" xml:space="preserve">
    <value>Cancels Current Mooch</value>
  </data>
  <data name="AutoCastUseChum" xml:space="preserve">
    <value>Use Chum</value>
  </data>
  <data name="AutoCastExtraOptionPrizeCatch" xml:space="preserve">
    <value>Only use when Mooch II is on NOT available - READ &gt;&gt;&gt;</value>
  </data>
  <data name="ExtraOptionPrizeCatchHelpMarker" xml:space="preserve">
    <value>&gt;Make sure 'Use Mooch II' is enabled or else it wont work&lt;
This could save you 100gp if going only for mooches</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>.</value>
  </data>
  <data name="Enable_AutoHook" xml:space="preserve">
    <value>Enable AutoHook</value>
  </data>
  <data name="Plugin_Enabled" xml:space="preserve">
    <value>Plugin Enabled</value>
  </data>
  <data name="Plugin_Disabled" xml:space="preserve">
    <value>Plugin Disabled</value>
  </data>
  <data name="Plugin_Name_Settings" xml:space="preserve">
    <value>{0} Settings</value>
  </data>
  <data name="PluginUi_Draw_Enables_Disables" xml:space="preserve">
    <value>Enables/Disables the plugin for you</value>
  </data>
  <data name="Using_Chum_Timer" xml:space="preserve">
    <value>Using Chum timer</value>
  </data>
  <data name="Disables_AutoHook" xml:space="preserve">
    <value>Disables AutoHook</value>
  </data>
  <data name="AutoHook_Disabled" xml:space="preserve">
    <value>AutoHook Disabled</value>
  </data>
  <data name="AutoHook_Enabled" xml:space="preserve">
    <value>AutoHook Enabled</value>
  </data>
  <data name="Enables_AutoHook" xml:space="preserve">
    <value>Enables AutoHook</value>
  </data>
  <data name="Opens_Config_Window" xml:space="preserve">
    <value>Opens Config Window</value>
  </data>
  <data name="TabAutoCasts_When_Stack_Equals" xml:space="preserve">
    <value>When Stacks = </value>
  </data>
  <data name="Use_Prize_Catch" xml:space="preserve">
    <value>Use Prize Catch</value>
  </data>
  <data name="Use_Prize_Catch_HelpText" xml:space="preserve">
    <value>Cancels Current Mooch. Patience and Makeshift Bait will not be used when Prize Catch active</value>
  </data>
  <data name="Toggles_AutoHook_On_Off" xml:space="preserve">
    <value>Toggles AutoHook On/Off</value>
  </data>
  <data name="Triple_Hook" xml:space="preserve">
    <value>Triple Hook</value>
  </data>
  <data name="Watered_Cordial" xml:space="preserve">
    <value>Watered Cordial</value>
  </data>
  <data name="Cordial" xml:space="preserve">
    <value>Cordial</value>
  </data>
  <data name="HQ_Cordial" xml:space="preserve">
    <value>HQ Cordial</value>
  </data>
  <data name="HQ_Watered_Cordial" xml:space="preserve">
    <value>HQ Watered Cordial</value>
  </data>
  <data name="Double_Hook" xml:space="preserve">
    <value>Double Hook</value>
  </data>
  <data name="Patience_II" xml:space="preserve">
    <value>Patience II</value>
  </data>
  <data name="Hi_Cordial" xml:space="preserve">
    <value>Hi-Cordial</value>
  </data>
  <data name="Patience_I" xml:space="preserve">
    <value>Patience I</value>
  </data>
  <data name="Prize_Catch" xml:space="preserve">
    <value>Prize Catch</value>
  </data>
  <data name="Surface_Slap" xml:space="preserve">
    <value>Surface Slap</value>
  </data>
  <data name="Identical_Cast" xml:space="preserve">
    <value>Identical Cast</value>
  </data>
  <data name="Fish_Eyes" xml:space="preserve">
    <value>Fish Eyes</value>
  </data>
  <data name="Chum" xml:space="preserve">
    <value>Chum</value>
  </data>
  <data name="Thaliaks_Favor" xml:space="preserve">
    <value>Thaliak's Favor</value>
  </data>
  <data name="MakeShift_Bait" xml:space="preserve">
    <value>MakeShift Bait</value>
  </data>
  <data name="BaitName_Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="DecompressString_Invalid_Import" xml:space="preserve">
    <value>This is not a valid import.</value>
  </data>
  <data name="New_Preset" xml:space="preserve">
    <value>New Preset</value>
  </data>
  <data name="Auto_Casts" xml:space="preserve">
    <value>Auto Casts</value>
  </data>
  <data name="TabAutoCasts_DrawAutoCast_HelpText" xml:space="preserve">
    <value>Cast (FSH Action) will be used after a bite

IMPORTANT!!!
If Auto Mooch (Global or Custom Preset) is not enabled, the line will be casted normally and you'll lose your mooch opportunity (If available)</value>
  </data>
  <data name="Global_Auto_Cast_Line" xml:space="preserve">
    <value>Global Auto Cast Line</value>
  </data>
  <data name="Use_Thaliaks_Favor" xml:space="preserve">
    <value>Use Thaliak's Favor</value>
  </data>
  <data name="Use_Natures_Bounty" xml:space="preserve">
    <value>Use Nature's Bounty</value>
  </data>
  <data name="Enable_AutoGig" xml:space="preserve">
    <value>Enable AutoGig</value>
  </data>
  <data name="Hitbox" xml:space="preserve">
    <value>Hitbox</value>
  </data>
  <data name="Use_Makeshift_Bait" xml:space="preserve">
    <value>Use Makeshift Bait</value>
  </data>
  <data name="TabAutoCasts_DrawMakeShiftBait_HelpText" xml:space="preserve">
    <value>This might conflict with Auto Thaliak's Favor</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsThaliaksFavor_" xml:space="preserve">
    <value>When Stacks =</value>
  </data>
  <data name="TabAutoCasts_DrawThaliaksFavor_HelpText" xml:space="preserve">
    <value>This might conflict with Auto MakeShift Bait</value>
  </data>
  <data name="Use_Patience_I_II" xml:space="preserve">
    <value>Use Patience I/II</value>
  </data>
  <data name="TabAutoCasts_DrawPatience_HelpText" xml:space="preserve">
    <value>Patience I/II will be used when your current GP is equal (or higher) to the action cost +20 (Ex: 220 for I, 580 for II), this helps to avoid not having GP for the hooksets</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsPatience" xml:space="preserve">
    <value>Use when Makeshift Bait is active</value>
  </data>
  <data name="Enable_Auto_Casts" xml:space="preserve">
    <value>Enable Auto Casts</value>
  </data>
  <data name="Dont_Cancel_Mooch" xml:space="preserve">
    <value>Don't Cancel Mooch</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_HelpText" xml:space="preserve">
    <value>Actions that cancel mooch wont be used (e.g. Chum, Fish Eyes, Prize Catch etc.)</value>
  </data>
  <data name="TabAutoCasts_DrawExtraOptionsAutoMooch_Extra_Only_Active" xml:space="preserve">
    <value>Only use when Fisher's Intuition is active</value>
  </data>
  <data name="Use_Mooch_II" xml:space="preserve">
    <value>Use Mooch II</value>
  </data>
  <data name="Global_Auto_Mooch" xml:space="preserve">
    <value>Global Auto Mooch</value>
  </data>
  <data name="TabAutoCasts_DrawHeader_Guide_Collectables" xml:space="preserve">
    <value>Guide: How to auto accept Collectables</value>
  </data>
  <data name="TabAutoCasts_DrawAutoMooch_HelpText" xml:space="preserve">
    <value>This option have priority over Auto Cast Line

If you want to Auto Mooch only a specific fish and ignore others, disable this option and create a Custom Preset.</value>
  </data>
  <data name="Support_me_on_Ko_fi" xml:space="preserve">
    <value>Support me on Ko-fi</value>
  </data>
  <data name="Complete" xml:space="preserve">
    <value>Complete</value>
  </data>
  <data name="Incomplete" xml:space="preserve">
    <value>Incomplete</value>
  </data>
  <data name="AutoHook" xml:space="preserve">
    <value>AutoHook</value>
  </data>
  <data name="PluginUi_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="TabGeneral_DrawHeader_Localization_Help" xml:space="preserve">
    <value>Help with the plugin localization (Crowdin)</value>
  </data>
</root>